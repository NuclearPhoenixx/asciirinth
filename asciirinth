#!/usr/bin/env bash
# Import Map Maker and GUI
source $(dirname $0)/map-maker
source $(dirname $0)/gui

# MODS, yay | Only do this if mods are enabled
# Security issue, because any shell script in the folder is executed ...
# ... but it's the player's responsibility to not blindly download ...
# ... stuff from the internet, as always of course.
if [ "$OPTIONS_mods" = "yes" ]
then
  # Only do if mods directory exists
  if [ -d "$(dirname $0)/mods" ]
  then
    for mod in "$(find mods/*.sh)"
    do
      source $(dirname $0)/$mod
    done
  fi
fi


### OUTPUT THE MAP TO THE SCREEN ###
function output {

  clear
  echo -e "${COLOR_hint} ASCIIrinth Map: $mapfile${COLOR_reset}\n"
  local j=0
  while [ "$j" -le "$i" ]
  do

    local outputLevel="level$j"
    echo -e "${COLOR_labyrinth}${!outputLevel}"
    ((j++))

  done
  echo -e " ${COLOR_hint}Get to the '$CHAR_goal' to complete this map!${COLOR_reset}"

}

### THIS MANAGES MOVEMENT, BORDERS AND CHECKS IF WON ###
function input {

  placeholder=
  case $control in
    $KEY_left)
        local moveToX=$((CHAR_X - 1))
        local moveToY="$CHAR_Y";;
    $KEY_right)
        local moveToX=$((CHAR_X + 1))
        local moveToY="$CHAR_Y";;
    $KEY_down)
        local moveToY=$((CHAR_Y +1 ))
        local moveToX="$CHAR_X";;
    $KEY_up)
        local moveToY=$((CHAR_Y - 1))
        local moveToX="$CHAR_X";;
    $KEY_escape) # IF PAUSE WAS PRESSED
        placeholder="escape"
        return;;
    *) return;;
  esac

  #PlayerPosition="array$CHAR_Y[$CHAR_X]"
  local nextPosition="array$moveToY[$moveToX]"
  case ${!nextPosition} in
    "$CHAR_goal")
        placeholder="win";;
    " ") # SPACE
        IFS= read "array$CHAR_Y[$CHAR_X]" <<< " "
        IFS= read "array$moveToY[$moveToX]" <<< "$CHAR_player"
        CHAR_X="$moveToX"
        CHAR_Y="$moveToY";;
  esac

}

### GET ALL THE RIGHT VARs FOR OUTPUT FUNCTION ###
function render_map {

  local j=0
  while [ "$j" -le "$i" ]
  do

    local arr="array$j[@]"
    for lvl in "${!arr}"
    do

      local tmp+="$lvl"

    done
    export "level$j=$tmp"
    local tmp=
    ((j++))

  done

}

### LOCATE THE $CHAR_player ###
function locate_player {

  local j=0
  while [ "$j" -le "$i" ]
  do

    local arr="array$j[@]"
    local a=0
    for searchPos in "${!arr}"
    do

      if [ "$searchPos" = "$CHAR_player" ]
      then
        CHAR_X="$a"
        CHAR_Y="$j"
        return
      else
        ((a++))
      fi

    done
    ((j++))
  done

}

### Read the map file into arrays ###
function read_map {

  i=0
  local var=
  while IFS= read -r "var"
  do
    IFS=',' read -r -a "array$i" <<< "$var"
    ((i++))
  done < "$mapfile"

}


############################################
#####    M A I N    F U N C T I O N    #####
############################################
function main {
  # TRIGGER GUI
  reset_gui
  gui
  # After the GUI finished start the game by preparing the map
  read_map
  locate_player
  render_map

  # After initialization do this endlessly
  while true
  do

    output
    trap "return" SIGINT
    read -s -n1 control
    input
    case $placeholder in
      win)
          echo -e "\n$TEXT_won\n"
          read -r -s -n1
          return;;
      escape)
          ingamePause
          gui
          if [ "$exitVar" = "exit" ]
          then
            return
          fi;;
      *) # ELSE
          render_map
          output
    esac
  done
}

while true
do
  main
done
