#!/usr/bin/env bash

function original {

  trap "lreturn='kill'; return" SIGINT
  while true
  do
    read -e -p ":: Please specify your text file's full path: " original
    if [ $original ] && find "$original" >/dev/null 2>&1
    then
      return
    else
      echo -e "\033[0;31m [!] Not a valid path.\033[0m"
    fi
  done
}

function mapname {

  trap "lreturn='kill'; return" SIGINT
  while true
  do
    read -e -p ":: What name should the map have (no file endings): " mapname
    if  [ $mapname ]
    then
      return
    else
      echo -e "\033[0;31m [!] Not a valid map name.\033[0m"
    fi
  done
}

function mapMaker {

  clear
  echo -e "\n${COLOR_menuHeader} [ASCIIrinth Map Maker]${COLOR_reset}\n"
  echo " In order for this to work you need to make a txt file and 'draw' your map with ASCII characters in any external editor."
  echo " This will convert it to a compatible .map file for the game. Your map will be shown exactly like you specified it to look like."
  echo -e  "\n Requirements:"
  echo "  [*] The player character is defined by an 'O' (capital 'o'!)."
  echo "  [*] The goal is defined by the character '*'."
  echo "  [*] Accessible places are built with SPACEs."
  echo "  [*] Do not use commas (,) anywhere."
  echo -e "  [*] At the end of the file should be a blank line otherwise it will not load correctly.\n\n"

  tput cnorm -- normal
  original
  mapname
  tput civis -- invisible

  if [ "$lreturn" ]
  then
    lreturn=
    return
  fi

  clear

  local mapname="maps/$mapname.map"
  if ! [ -d "maps" ]
  then
    mkdir maps
  fi


  local i=
  while IFS= read -r "line"
  do

    echo "$line"
    while IFS= read -r -n1 "char"
    do

      local tmp+="$char,"

    done <<< "$line"

    declare line$i="$tmp"
    local tmp=
    ((i++))

  done < "$original"


  local j=
  while [ "$j" -le "$i" ]
  do

    local lines="line$j"
    if ! [ $j ]
    then
      echo "${!lines}" > "$mapname"
    else
      echo "${!lines}" >> "$mapname"
    fi
    ((j++))

  done

  # Finalization
  if find "$mapname">/dev/null 2>&1
  then
    echo -e "\n\033[0;32m Your map has been successfully exported to '$mapname'.\033[0m\n"
  else
    echo -e "\n\033[1;31m An error occured. Please try again later.\033[0m\n"
  fi
  read -s -n1 -p " Press any key to continue..."
}
